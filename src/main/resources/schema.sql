--DROP TABLE IF EXISTS users, item_requests, items, bookings, comments;

CREATE TABLE IF NOT EXISTS users (
  user_id 	BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name 		VARCHAR(255) NOT NULL,
  email 	VARCHAR(512) NOT NULL,

  CONSTRAINT PK_USER PRIMARY KEY (user_id),
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS item_requests (
  item_request_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  description	  VARCHAR(255) NOT NULL,
  requestor_id 	  BIGINT NOT NULL,
  created 		  TIMESTAMP WITHOUT TIME ZONE,

  CONSTRAINT PK_ITEM_REQUEST PRIMARY KEY (item_request_id),
  CONSTRAINT FK_IREQUEST_USER_ID FOREIGN KEY (requestor_id) REFERENCES users (user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS items (
  item_id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name 		  VARCHAR(255) NOT NULL,
  description VARCHAR(1024) NOT NULL,
  available   BOOLEAN,
  owner_id 	  BIGINT NOT NULL,
  request_id  BIGINT,

  CONSTRAINT PK_ITEM PRIMARY KEY (item_id),
  CONSTRAINT FK_ITEM_USER_ID FOREIGN KEY (owner_id) REFERENCES users (user_id) ON DELETE CASCADE,
  CONSTRAINT FK_ITEM_REQUEST_ID FOREIGN KEY (request_id) REFERENCES item_requests (item_request_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS bookings (
  booking_id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  start_booking TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  end_booking   TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  item_id       BIGINT NOT NULL,
  booker_id     BIGINT NOT NULL,
  status        VARCHAR(50),
  
  CONSTRAINT PK_BOOKING PRIMARY KEY (booking_id),
  CONSTRAINT FK_BOOKING_ITEM_ID FOREIGN KEY (item_id) REFERENCES items (item_id) ON DELETE CASCADE,
  CONSTRAINT FK_BOOKING_USER_ID FOREIGN KEY (booker_id ) REFERENCES users (user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments (
  comment_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  text       VARCHAR(1024) NOT NULL,
  item_id    BIGINT NOT NULL,
  author_id  BIGINT NOT NULL,
  created    TIMESTAMP WITHOUT TIME ZONE NOT NULL,

  CONSTRAINT PK_COMMENT PRIMARY KEY (comment_id),
  CONSTRAINT FK_COMMENT_ITEM_ID FOREIGN KEY (item_id) REFERENCES items (item_id),
  CONSTRAINT FK_COMMENT_USER_ID FOREIGN KEY (author_id) REFERENCES users (user_id)
);